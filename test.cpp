#include<vector>
#include <bits/stdc++.h>

using namespace std;

int getMaximumMEX(vector<int> arr) {
    int n = arr.size();
    int sum1 = n*(n-1)/2;
    int sum2 = 0;
    int max_val = 0;
    for(auto& i : arr){
        sum2 += i;
        max_val = i>max_val? i:max_val;
    }

    cout << sum1 << endl;
    cout << sum2 << endl;
    
    if(sum1>=sum2){
        return max_val+1;
    }
    return n;
}

int main(){
    vector<int> arr = {113,191,733,431,38,349,172,305,952,1007,1082,1066,1279,282,124,1151,1015,233,1208,100,709,1156,1094,803,160,1183,1137,219,1185,28,1282,484,315,587,733,132,807,1082,450,56,109,731,905,156,681,1218,560,835,1068,215,236,655,1274,352,1168,741,355,180,462,1197,722,620,224,0,7,1275,980,315,1145,1033,178,601,160,270,984,577,924,1095,775,137,4,47,506,1031,715,947,621,582,730,431,639,358,827,913,1288,1000,1057,216,17,494,574,96,223,333,358,1206,923,839,61,186,262,828,756,1256,534,576,953,812,250,150,844,1223,1228,662,457,1207,1221,941,1170,280,568,396,417,56,1190,1296,948,353,334,975,89,1243,1049,216,1029,384,893,661,163,297,517,637,526,561,40,129,823,212,229,1295,395,0,976,1252,1075,513,874,60,351,381,260,1212,937,434,384,113,648,1249,174,996,608,688,424,1190,202,938,1044,580,95,847,562,788,1090,1267,253,288,546,387,811,1248,294,730,313,249,955,647,310,634,27,245,420,1127,1277,1110,616,254,355,830,921,487,745,448,278,493,533,156,1048,1174,843,1263,224,1196,773,1292,638,937,770,15,720,489,449,857,1301,35,423,401,1023,925,211,706,1117,555,952,864,537,393,1253,567,829,458,1206,330,1084,506,870,1229,688,194,966,825,3,825,1095,897,756,1204,251,31,312,369,1091,1023,1232,1193,601,702,344,29,91,363,408,62,964,33,1213,1252,642,488,398,0,844,1184,1290,1079,1152,472,776,865,725,1186,866,45,1224,150,887,725,415,159,47,1223,874,1227,459,618,1284,213,1201,1173,189,497,735,107,1303,906,1114,1221,634,59,1112,466,577,92,1255,169,136,1011,161,362,691,337,484,799,419,1048,932,1189,1143,396,582,1286,966,1114,734,802,636,61,566,1013,55,722,442,633,744,1296,274,290,454,495,370,319,1185,89,595,327,758,127,629,260,755,537,1167,1181,242,535,85,646,487,460,197,259,1040,141,218,191,590,427,1304,589,643,1119,110,1148,437,595,37,829,409,1093,308,637,830,125,613,670,1181,186,355,658,297,1179,741,732,1214,924,28,574,202,734,611,750,869,874,579,1019,820,847,81,1107,795,570,500,1056,545,285,372,504,169,154,987,947,242,976,11,811,328,304,999,572,758,36,619,594,0,1004,591,83,1053,992,1061,1304,1101,410,690,462,1026,185,165,547,1227,434,372,1187,650,1230,100,430,612,1033,1296,998,429,471,748,186,813,805,925,1175,180,420,440,727,174,468,504,823,228,940,1096,1062,602,10,883,1108,966,601,329,874,395,178,193,693,803,49,28,1228,684,561,1299,883,1231,353,1304,56,493,717,100,847,235,1085,562,549,401,1178,536,1201,1177,862,248,699,385,732,72,199,425,951,224,122,368,118,44,1258,552,402,999,216,1207,80,758,964,685,1170,920,615,200,638,1166,1028,813,311,60,678,1156,177,774,878,536,1245,661,438,904,643,1013,1149,330,837,1147,206,1271,1144,997,95,1277,173,800,132,742,1151,1290,549,530,881,824,197,733,1251,590,480,987,254,883,974,180,837,539,501,475,39,459,721,462,973,394,693,232,708,1024,209,1291,534,376,1239,69,431,709,61,749,82,124,270,788,850,651,933,1051,578,904,306,349,67,493,1241,858,410,222,843,881,694,558,63,552,723,1225,1256,993,1215,484,755,212,360,167,478,146,1252,1157,219,500,115,784,1232,834,906,473,617,233,650,964,524,1259,526,757,58,829,563,398,336,141,1194,1028,1214,659,152,489,1283,107,609,803,216,453,1108,340,338,52,54,1072,613,37,1109,371,1064,265,495,782,347,128,1265,754,589,1154,879,1073,925,282,91,556,635,1268,559,137,984,931,93,916,698,1294,1263,706,575,1244,726,1161,258,543,908,707,362,929,268,1276,887,1200,701,352,510,44,245,871,176,926,637,905,1074,700,51,717,334,1301,967,858,907,383,822,899,1269,629,1102,148,543,442,1195,708,963,1243,694,1193,662,340,1113,312,225,1197,977,686,466,537,237,464,1226,798,351,264,1047,49,490,358,143,320,239,966,980,1196,403,584,904,214,797,1074,531,1035,142,784,434,141,286,750,193,960,319,954,950,807,247,570,1256,710,110,486,595,408,455,97,230,977,650,106,425,581,436,647,322,947,1000,915,465,566,872,280,1302,194,445,1,1097,1067,34,320,521,83,280,1027,945,914,478,447,163,433,1126,218,1248,825,1161,126,253,19,1173,873,372,927,186,32,1077,1096,53,42,226,906,896,955,201,1226,82,376,1074,575,949,598,270,1231,972,820,851,742,391,360,620,835,928,1121,558,360,723,195,453,1218,56,1302,213,1096,306,711,714,19,225,724,677,789,381,334,517,974,803,893,1243,601,10,250,372,1218,1132,203,127,273,934,1108,860,353,606,1193,320,1048,354,762,1295,636,64,743,925,1161,432,434,920,1140,88,617,1161,725,886,1075,889,1219,389,1192,376,676,709,171,290,724,346,1253,1091,462,328,795,1107,812,1109,118,322,461,754,1144,179,626,1222,683,279,362,1263,204,897,1058,626,1125,599,724,301,1250,1097,891,692,717,827,701,1289,991,478,1051,1176,1179,958,8,569,1077,182,797,1132,131,997,411,150,135,410,1276,452,985,491,140,628,714,795,617,569,300,655,753,265,571,361,309,959,872,968,947,1252,509,1014,300,1109,1004,126,847,666,1174,600,1143,131,909,304,325,1072,70,960,654,892,1153,100,941,604,254,573,1268,231,1154,961,263,783,97,1240,458,542,736,898,1257,824,1145,241,772,904,728,300,759,160,178,865,335,424,723,156,364,897,247,125,817,0,383,1167,321,911,1204,1198,553,37,1159,551,666,749,936,1115,172,1087,60,723,1254,309,552,276,533,938,985,412,1017,95,54,584,975,1266,1133,758,933,199,297,760,1206,417,660,1218,788,913,619,155,887,220,372,881,407,314,1000,342,124,1297,1124,931,471,539,1302,991,1269,1213,513,356,829,439,845,884,536,726,1004,1290,725,566,574,634,473,875,508,1135,159,1291,1102,199,261,435,721,1152,1287,38,456,862,42,896,1083,738,109,601,1174,1162,295,145,1030,920,449,744,1038,1256,176,1281,738,600,333,991,93,1050,438,95,222,737,605,707,374,951,952,14,1001,174,562,1203,786,487,534,552,406,769,1264,525,442,286,1277,602,810,469,73,834,921,659};
    cout << getMaximumMEX(arr) << endl; 
    return 0;
}